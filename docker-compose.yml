version: '3.8'

services:
  # CPU 版本服务
  sensevoice-cpu:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        PYTORCH_INDEX_URL: "https://download.pytorch.org/whl/cpu"
        INSTALL_GPU: "false"
    ports:
      - "50000:50000"
    environment:
      - SENSEVOICE_DEVICE=cpu
      - SENSEVOICE_HOST=0.0.0.0
      - SENSEVOICE_PORT=50000
      - SENSEVOICE_LOG_LEVEL=INFO
      - SENSEVOICE_MAX_CONNECTIONS=50
    volumes:
      - ./logs:/app/logs
      - modelscope-cache:/root/.cache/modelscope
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:50000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # GPU 版本服务
  sensevoice-gpu:
    build:
      context: .
      dockerfile: Dockerfile.gpu
    ports:
      - "50001:50000"
    environment:
      - SENSEVOICE_DEVICE=cuda
      - SENSEVOICE_HOST=0.0.0.0
      - SENSEVOICE_PORT=50000
      - SENSEVOICE_LOG_LEVEL=INFO
      - SENSEVOICE_MAX_CONNECTIONS=100
    volumes:
      - ./logs:/app/logs
      - modelscope-cache:/root/.cache/modelscope
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:50000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    profiles:
      - gpu

  # Nginx 反向代理（可选）
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - sensevoice-cpu
    restart: unless-stopped
    profiles:
      - nginx

volumes:
  modelscope-cache:
    driver: local

networks:
  default:
    name: sensevoice-network